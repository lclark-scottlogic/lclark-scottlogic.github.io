{"version":3,"sources":["app/game.module.css","app/square.module.css","app/Slice.js","app/store.js","app/square.js","app/board.js","app/game.js","index.js","app/board.module.css"],"names":["module","exports","initialState","history","squares","Array","fill","stepNumber","xIsNext","gameSlice","createSlice","name","reducers","setHistory","state","action","payload","setXIsNext","setStepNumber","actions","configureStore","reducer","game","Square","props","className","squareCSS","square","onClick","value","Board","renderSquare","i","boardCSS","boardFull","boardRow","calculateWinner","lines","length","a","b","c","Game","status","dispatch","useDispatch","useSelector","hist","current","winner","moves","map","step","move","desc","slice","jumpTo","gameCSS","concat","handleClick","gameInfo","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.988d99d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameInfo\":\"game_gameInfo__3GP51\",\"game\":\"game_game__1cSbx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"square_square__32q6O\",\"kbd-navigation\":\"square_kbd-navigation__q7xKp\"};","import { createSlice } from '@reduxjs/toolkit'\r\nconst initialState={\r\n    history:[{squares:Array(9).fill(null)}],\r\n    stepNumber:0,\r\n    xIsNext:true,\r\n}\r\nconst gameSlice=createSlice({\r\n    name:'game',\r\n    initialState,\r\n    reducers:{\r\n        setHistory(state,action){\r\n           state.history=action.payload\r\n        },\r\n        setXIsNext(state,action){\r\n            state.xIsNext=action.payload\r\n        },\r\n        setStepNumber(state,action){\r\n            state.stepNumber=action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const{setXIsNext,setStepNumber,setHistory}=gameSlice.actions\r\nexport default gameSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n// import { setXIsNext,setStepNumber,setHistory } from './Slice'\r\nimport gameSlice from './Slice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    game: gameSlice\r\n  },\r\n})\r\n","import React from \"react\";\r\nimport squareCSS from './square.module.css'\r\nfunction Square(props) {\r\n    //create a button that we can click on and will be indexed and displayed in the square\r\n    return (\r\n      //onClick is a function which will set the state to a X when <button> clicked (setState inherent to react)\r\n      //onClick and <button> tells react to listen when clicked. onClick is then specified in Board so\r\n      //handleClick(i) is called. button +onClick is builin whilst Board's onClick is a variable\r\n      <button className={squareCSS.square} onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n  export default Square","import Square from './square';\r\nimport React from \"react\";\r\nimport boardCSS from './board.module.css'\r\nfunction Board(props) {\r\nconst renderSquare = (i) => {\r\n    //alter renderSquare so it reads the state of the i-th square\r\n    return (\r\n      //pass down value and onClick from board to square\r\n      <Square value={props.squares[i]} onClick={() => props.onClick(i)} />\r\n    );\r\n  };\r\n  return (\r\n    <div className={boardCSS.boardFull}>\r\n      <div className={boardCSS.boardRow}>\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </div>\r\n      <div className={boardCSS.boardRow}>\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </div>\r\n      <div className={boardCSS.boardRow}>\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n}  \r\nexport default Board","import Board from \"./board\";\r\nimport React from \"react\";\r\nimport boardCSS from './board.module.css'\r\nimport gameCSS from './game.module.css'\r\nimport './list.module.css'\r\nimport { setHistory, setXIsNext, setStepNumber } from \"./Slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nfunction Game(props) {\r\n    //lifting state up from board to game to store history\r\n    const dispatch = useDispatch();\r\n    const history = useSelector((state) => state.game.history);\r\n    const stepNumber = useSelector((state) => state.game.stepNumber);\r\n    const xIsNext = useSelector((state) => state.game.xIsNext);\r\n  \r\n    const jumpTo = (step) => {\r\n      dispatch(setStepNumber(step));\r\n      dispatch(setXIsNext(step % 2 === 0));\r\n      dispatch(setHistory(history.slice(0,step+1)))\r\n    };\r\n  \r\n    const handleClick = (i) => {\r\n      const hist = history.slice(0, stepNumber + 1);\r\n      const current = hist[hist.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      //ternary allows change from X and O\r\n      squares[i] = xIsNext ? \"üëµüèª\" : \"üßìüèª\";\r\n      dispatch(setHistory(hist.concat([{ squares: squares }])));\r\n      dispatch(setStepNumber(hist.length));\r\n      dispatch(setXIsNext(!xIsNext));\r\n    };\r\n    const hist = history;\r\n    const current = hist[stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n  \r\n    const moves = hist.map((step, move) => {\r\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (xIsNext ? \"üëµüèª\" : \"üßìüèª\");\r\n    }\r\n  \r\n    return (\r\n      <div className={gameCSS.game}>\r\n  <h1> NOUGHTS AND CROSSES</h1>\r\n        <div className={boardCSS.boardFull}>\r\n          <Board squares={current.squares} onClick={(i) => handleClick(i)} />\r\n        </div>\r\n        <div className={gameCSS.gameInfo}>\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  //lines holds all possible ways to win as combinations of indices.\r\n  //For loop checks for winning combs\r\n  // ReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n  // root.render(<Game />);\r\n  \r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  export default Game","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport store from \"./app/store\";\r\n// import App from './app/App'\r\nimport { Provider } from \"react-redux\";\r\n// import { setHistory, setXIsNext, setStepNumber } from \"./app/Slice\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\nimport Game from './app/game'\r\n// const root = ReactDOM.createRoot(document.getElementById('root'))\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Game />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__13Pmh\",\"boardFull\":\"board_boardFull__18rEl\",\"boardRow\":\"board_boardRow__eJdU2\"};"],"sourceRoot":""}